#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–£–ú–ù–´–ô –ê–ù–ê–õ–ò–ó –í–°–ï–• –ü–ê–ü–û–ö
–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –≤—Å–µ –ø–∞–ø–∫–∏ –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ fotos
–ò—Å–ø–æ–ª—å–∑—É–µ—Ç —É–º–Ω—ã–π —Å–µ–ª–µ–∫—Ç–æ—Ä —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º–∏ –ø—Ä–∞–≤–∏–ª–∞–º–∏
"""

import os
import sys
from smart_photo_selector import SmartPhotoSelector

def get_all_folders():
    """–ü–æ–ª—É—á–∞–µ—Ç –≤—Å–µ –ø–∞–ø–∫–∏ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞"""
    fotos_dir = "fotos"
    if not os.path.exists(fotos_dir):
        print(f"–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è '{fotos_dir}' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!")
        return []
    
    folders = []
    for item in os.listdir(fotos_dir):
        item_path = os.path.join(fotos_dir, item)
        if os.path.isdir(item_path):
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –ø–∞–ø–∫–∏ 'big'
            big_path = os.path.join(item_path, "big")
            if os.path.exists(big_path):
                folders.append(item)
    
    return sorted(folders, key=lambda x: int(x))

def analyze_folder(folder_number):
    """–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –æ–¥–Ω—É –ø–∞–ø–∫—É"""
    print(f"\n{'='*60}")
    print(f"üß† –ê–ù–ê–õ–ò–ó –ü–ê–ü–ö–ò {folder_number}")
    print(f"{'='*60}")
    
    # –ü—É—Ç—å –∫ –ø–∞–ø–∫–µ big
    folder_path = f"fotos/{folder_number}/big"
    
    if not os.path.exists(folder_path):
        print(f"‚ùå –ü–∞–ø–∫–∞ '{folder_path}' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!")
        return False
    
    try:
        # –°–æ–∑–¥–∞–µ–º —É–º–Ω—ã–π —Å–µ–ª–µ–∫—Ç–æ—Ä
        selector = SmartPhotoSelector()
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –∞–Ω–∞–ª–∏–∑
        best_photos = selector.select_best_photos(folder_path, 2)
        
        if best_photos:
            print(f"\n‚úÖ –ü–∞–ø–∫–∞ {folder_number} –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
            print(f"üìÅ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤: smart_photos_results/folder_{folder_number}/")
            return True
        else:
            print(f"\n‚ùå –ê–Ω–∞–ª–∏–∑ –ø–∞–ø–∫–∏ {folder_number} –Ω–µ —É–¥–∞–ª—Å—è!")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–Ω–∞–ª–∏–∑–µ –ø–∞–ø–∫–∏ {folder_number}: {e}")
        return False

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üß† –£–ú–ù–´–ô –ê–ù–ê–õ–ò–ó –í–°–ï–• –ü–ê–ü–û–ö –° –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ò–ú–ò –ü–†–ê–í–ò–õ–ê–ú–ò")
    print("="*70)
    print("ü§ñ AI –º–æ–¥–µ–ª—å: ConvNeXt Large + —É–º–Ω—ã–µ –ø—Ä–∞–≤–∏–ª–∞")
    print("üéØ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–∞–≤–∏–ª–∞: —Ä–∞–±–æ—Ç–∞–µ—Ç —Å –ª—é–±—ã–º–∏ –ø–∞–ø–∫–∞–º–∏!")
    print("üìÅ –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –≤—Å–µ –ø–∞–ø–∫–∏ –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ fotos")
    print("üèÜ –ö–∞–∂–¥–∞—è –ø–∞–ø–∫–∞ –ø–æ–ª—É—á–∞–µ—Ç —Å–≤–æ—é –ø–∞–ø–∫—É —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏!")
    print()
    
    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –ø–∞–ø–∫–∏
    folders = get_all_folders()
    
    if not folders:
        print("‚ùå –ü–∞–ø–∫–∏ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!")
        print("–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è 'fotos' —Å –ø—Ä–æ–Ω—É–º–µ—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ –ø–∞–ø–∫–∞–º–∏")
        return
    
    print(f"üîç –ù–∞–π–¥–µ–Ω–æ {len(folders)} –ø–∞–ø–æ–∫ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞:")
    for folder in folders:
        print(f"   üìÅ –ü–∞–ø–∫–∞ {folder}: fotos/{folder}/big")
    print()
    
    # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–∞–∂–¥—É—é –ø–∞–ø–∫—É
    successful = 0
    failed = 0
    
    for folder in folders:
        if analyze_folder(folder):
            successful += 1
        else:
            failed += 1
    
    # –ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç
    print(f"\n{'='*70}")
    print("üìä –ò–¢–û–ì–û–í–´–ô –û–¢–ß–ï–¢")
    print(f"{'='*70}")
    print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ: {successful} –ø–∞–ø–æ–∫")
    print(f"‚ùå –û—à–∏–±–æ–∫: {failed} –ø–∞–ø–æ–∫")
    print(f"üìÅ –í—Å–µ–≥–æ –ø–∞–ø–æ–∫: {len(folders)}")
    
    if successful > 0:
        print(f"\nüéâ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ –æ–±—â–µ–π –ø–∞–ø–∫–µ:")
        print(f"   üìÅ smart_photos_results/ - –æ–±—â–∞—è –ø–∞–ø–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤")
        for folder in folders:
            print(f"      üìÅ folder_{folder}/ - —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–∞–ø–∫–∏ {folder}")
        
        print(f"\nüß† –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–∞–≤–∏–ª–∞ —Ä–∞–±–æ—Ç–∞—é—Ç –∏–¥–µ–∞–ª—å–Ω–æ!")
        print("‚úÖ –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ —Å –Ω–æ–≤—ã–º–∏ –ø–∞–ø–∫–∞–º–∏!")
    
    if failed > 0:
        print(f"\n‚ö†Ô∏è –û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ –ø–∞–ø–∫–∏ —Å –æ—à–∏–±–∫–∞–º–∏")
        print("–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞–ª–∏—á–∏–µ —Ñ–∞–π–ª–æ–≤ –∏ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å")

if __name__ == "__main__":
    main()
